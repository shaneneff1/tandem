{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "applicationName": {
            "type": "string",
            "metadata": {
                "description": "Specifies the name of the key vault."
            }
        },
        "location": {
            "type": "string",
            "metadata": {
                "description": "Specifies the Azure location where the key vault should be created."
            }
        },
        "enabledForDeployment": {
            "type": "bool",
            "metadata": {
                "description": "Specifies whether Azure Virtual Machines are permitted to retrieve certificates stored as secrets from the key vault."
            }
        },
        "enabledForDiskEncryption": {
            "type": "bool",
            "metadata": {
                "description": "Specifies whether Azure Disk Encryption is permitted to retrieve secrets from the vault and unwrap keys."
            }
        },
        "enablePurgeProtection": {
            "type": "bool",
            "metadata": {
                "description": "Specifies whether purge protection has been applied to the key vault."
            }
        },
        "enabledForTemplateDeployment": {
            "type": "bool",
            "metadata": {
                "description": "Specifies whether Azure Resource Manager is permitted to retrieve secrets from the key vault."
            }
        },
        "enableSoftDelete": {
            "type": "bool",
            "metadata": {
                "description": "Specifies whether soft delete has been enabled."
            }
        },
        "tenantId": {
            "type": "string"
        },
        "objectId": {
            "type": "string",
            "metadata": {
                "description": "Specifies the ObjectID of the service principals in Azure Active Directory that have access to the Key Vault"
            }
        },
        "keysPermissions": {
            "type": "array",
            "metadata": {
                "description": "Specifies the permissions to keys in the vault. Valid values are: all, encrypt, decrypt, wrapKey, unwrapKey, sign, verify, get, list, create, update, import, delete, backup, restore, recover, and purge."
            }
        },
        "secretsPermissions": {
            "type": "array",
            "metadata": {
                "description": "Specifies the permissions to secrets in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
            }
        },
        "skuName": {
            "type": "string",
            "metadata": {
                "description": "Specifies whether the key vault is a standard vault or a premium vault."
            }
        },
        "certificatePermissions": {
            "type": "array",
            "metadata": {
                "description": "Specifies the permissions to certificates in the vault. Valid values are: all, get, list, set, delete, backup, restore, recover, and purge."
            }
        }
    },
    "variables": {
        "appName": "[concat(toLower(parameters('applicationName')))]",
        "resourceName": "[concat(variables('appName'), '-kv')]",
        "apiVersion": "2016-10-01"
    },
    "resources": [
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[variables('resourceName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[parameters('location')]",
            "properties": {
                "enabledForDeployment": "[parameters('enabledForDeployment')]",
                "enabledForDiskEncryption": "[parameters('enabledForDiskEncryption')]",
                "enablePurgeProtection": "[parameters('enablePurgeProtection')]",
                "enabledForTemplateDeployment": "[parameters('enabledForTemplateDeployment')]",
                "enableSoftDelete": "[parameters('enableSoftDelete')]",
                "tenantId": "[parameters('tenantId')]",
                "accessPolicies": [
                    {
                        "objectId": "[parameters('objectId')]",
                        "tenantId": "[parameters('tenantId')]",
                        "permissions": {
                            "keys": "[parameters('keysPermissions')]",
                            "secrets": "[parameters('secretsPermissions')]",
                            "certificates": "[parameters('certificatePermissions')]"
                        }
                    }
                ],
                "sku": {
                    "name": "[parameters('skuName')]",
                    "family": "A"
                },
                "networkAcls": {
                    "defaultAction": "deny",
                    "bypass": "AzureServices",
                    "ipRules": []
                }
            }
        }
    ],
    "outputs": {
        "keyVaultName": {
            "type": "string",
            "value": "[variables('resourceName')]"
        }
    }
}
